/**
 * generated by Xtext 2.10.0
 */
package robot.ev3.dls.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import robot.ev3.dls.Actions;
import robot.ev3.dls.Behavior;
import robot.ev3.dls.BehaviorTypes;
import robot.ev3.dls.DlsPackage;
import robot.ev3.dls.TakeControl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Behavior</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link robot.ev3.dls.impl.BehaviorImpl#getName <em>Name</em>}</li>
 *   <li>{@link robot.ev3.dls.impl.BehaviorImpl#getBehaviorType <em>Behavior Type</em>}</li>
 *   <li>{@link robot.ev3.dls.impl.BehaviorImpl#getPrio <em>Prio</em>}</li>
 *   <li>{@link robot.ev3.dls.impl.BehaviorImpl#getControl <em>Control</em>}</li>
 *   <li>{@link robot.ev3.dls.impl.BehaviorImpl#getActions <em>Actions</em>}</li>
 * </ul>
 *
 * @generated
 */
public class BehaviorImpl extends MinimalEObjectImpl.Container implements Behavior
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getBehaviorType() <em>Behavior Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBehaviorType()
   * @generated
   * @ordered
   */
  protected static final BehaviorTypes BEHAVIOR_TYPE_EDEFAULT = BehaviorTypes.DRIVE;

  /**
   * The cached value of the '{@link #getBehaviorType() <em>Behavior Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBehaviorType()
   * @generated
   * @ordered
   */
  protected BehaviorTypes behaviorType = BEHAVIOR_TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #getPrio() <em>Prio</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPrio()
   * @generated
   * @ordered
   */
  protected static final int PRIO_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getPrio() <em>Prio</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPrio()
   * @generated
   * @ordered
   */
  protected int prio = PRIO_EDEFAULT;

  /**
   * The cached value of the '{@link #getControl() <em>Control</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getControl()
   * @generated
   * @ordered
   */
  protected TakeControl control;

  /**
   * The default value of the '{@link #getActions() <em>Actions</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getActions()
   * @generated
   * @ordered
   */
  protected static final Actions ACTIONS_EDEFAULT = Actions.ROTATE_L;

  /**
   * The cached value of the '{@link #getActions() <em>Actions</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getActions()
   * @generated
   * @ordered
   */
  protected Actions actions = ACTIONS_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected BehaviorImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DlsPackage.Literals.BEHAVIOR;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DlsPackage.BEHAVIOR__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BehaviorTypes getBehaviorType()
  {
    return behaviorType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setBehaviorType(BehaviorTypes newBehaviorType)
  {
    BehaviorTypes oldBehaviorType = behaviorType;
    behaviorType = newBehaviorType == null ? BEHAVIOR_TYPE_EDEFAULT : newBehaviorType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DlsPackage.BEHAVIOR__BEHAVIOR_TYPE, oldBehaviorType, behaviorType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getPrio()
  {
    return prio;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setPrio(int newPrio)
  {
    int oldPrio = prio;
    prio = newPrio;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DlsPackage.BEHAVIOR__PRIO, oldPrio, prio));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TakeControl getControl()
  {
    return control;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetControl(TakeControl newControl, NotificationChain msgs)
  {
    TakeControl oldControl = control;
    control = newControl;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DlsPackage.BEHAVIOR__CONTROL, oldControl, newControl);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setControl(TakeControl newControl)
  {
    if (newControl != control)
    {
      NotificationChain msgs = null;
      if (control != null)
        msgs = ((InternalEObject)control).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DlsPackage.BEHAVIOR__CONTROL, null, msgs);
      if (newControl != null)
        msgs = ((InternalEObject)newControl).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DlsPackage.BEHAVIOR__CONTROL, null, msgs);
      msgs = basicSetControl(newControl, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DlsPackage.BEHAVIOR__CONTROL, newControl, newControl));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Actions getActions()
  {
    return actions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setActions(Actions newActions)
  {
    Actions oldActions = actions;
    actions = newActions == null ? ACTIONS_EDEFAULT : newActions;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DlsPackage.BEHAVIOR__ACTIONS, oldActions, actions));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case DlsPackage.BEHAVIOR__CONTROL:
        return basicSetControl(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DlsPackage.BEHAVIOR__NAME:
        return getName();
      case DlsPackage.BEHAVIOR__BEHAVIOR_TYPE:
        return getBehaviorType();
      case DlsPackage.BEHAVIOR__PRIO:
        return getPrio();
      case DlsPackage.BEHAVIOR__CONTROL:
        return getControl();
      case DlsPackage.BEHAVIOR__ACTIONS:
        return getActions();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DlsPackage.BEHAVIOR__NAME:
        setName((String)newValue);
        return;
      case DlsPackage.BEHAVIOR__BEHAVIOR_TYPE:
        setBehaviorType((BehaviorTypes)newValue);
        return;
      case DlsPackage.BEHAVIOR__PRIO:
        setPrio((Integer)newValue);
        return;
      case DlsPackage.BEHAVIOR__CONTROL:
        setControl((TakeControl)newValue);
        return;
      case DlsPackage.BEHAVIOR__ACTIONS:
        setActions((Actions)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DlsPackage.BEHAVIOR__NAME:
        setName(NAME_EDEFAULT);
        return;
      case DlsPackage.BEHAVIOR__BEHAVIOR_TYPE:
        setBehaviorType(BEHAVIOR_TYPE_EDEFAULT);
        return;
      case DlsPackage.BEHAVIOR__PRIO:
        setPrio(PRIO_EDEFAULT);
        return;
      case DlsPackage.BEHAVIOR__CONTROL:
        setControl((TakeControl)null);
        return;
      case DlsPackage.BEHAVIOR__ACTIONS:
        setActions(ACTIONS_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DlsPackage.BEHAVIOR__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case DlsPackage.BEHAVIOR__BEHAVIOR_TYPE:
        return behaviorType != BEHAVIOR_TYPE_EDEFAULT;
      case DlsPackage.BEHAVIOR__PRIO:
        return prio != PRIO_EDEFAULT;
      case DlsPackage.BEHAVIOR__CONTROL:
        return control != null;
      case DlsPackage.BEHAVIOR__ACTIONS:
        return actions != ACTIONS_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", behaviorType: ");
    result.append(behaviorType);
    result.append(", prio: ");
    result.append(prio);
    result.append(", actions: ");
    result.append(actions);
    result.append(')');
    return result.toString();
  }

} //BehaviorImpl
