/**
 * generated by Xtext 2.10.0
 */
package robot.ev3.dls.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import robot.ev3.dls.CompareOperator;
import robot.ev3.dls.DlsPackage;
import robot.ev3.dls.UltrasonicSensor;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Ultrasonic Sensor</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link robot.ev3.dls.impl.UltrasonicSensorImpl#getComparator <em>Comparator</em>}</li>
 *   <li>{@link robot.ev3.dls.impl.UltrasonicSensorImpl#getDistance <em>Distance</em>}</li>
 * </ul>
 *
 * @generated
 */
public class UltrasonicSensorImpl extends SensorTypeImpl implements UltrasonicSensor
{
  /**
   * The default value of the '{@link #getComparator() <em>Comparator</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getComparator()
   * @generated
   * @ordered
   */
  protected static final CompareOperator COMPARATOR_EDEFAULT = CompareOperator.EQ;

  /**
   * The cached value of the '{@link #getComparator() <em>Comparator</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getComparator()
   * @generated
   * @ordered
   */
  protected CompareOperator comparator = COMPARATOR_EDEFAULT;

  /**
   * The default value of the '{@link #getDistance() <em>Distance</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDistance()
   * @generated
   * @ordered
   */
  protected static final String DISTANCE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDistance() <em>Distance</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDistance()
   * @generated
   * @ordered
   */
  protected String distance = DISTANCE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected UltrasonicSensorImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DlsPackage.Literals.ULTRASONIC_SENSOR;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CompareOperator getComparator()
  {
    return comparator;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setComparator(CompareOperator newComparator)
  {
    CompareOperator oldComparator = comparator;
    comparator = newComparator == null ? COMPARATOR_EDEFAULT : newComparator;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DlsPackage.ULTRASONIC_SENSOR__COMPARATOR, oldComparator, comparator));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getDistance()
  {
    return distance;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDistance(String newDistance)
  {
    String oldDistance = distance;
    distance = newDistance;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DlsPackage.ULTRASONIC_SENSOR__DISTANCE, oldDistance, distance));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DlsPackage.ULTRASONIC_SENSOR__COMPARATOR:
        return getComparator();
      case DlsPackage.ULTRASONIC_SENSOR__DISTANCE:
        return getDistance();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DlsPackage.ULTRASONIC_SENSOR__COMPARATOR:
        setComparator((CompareOperator)newValue);
        return;
      case DlsPackage.ULTRASONIC_SENSOR__DISTANCE:
        setDistance((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DlsPackage.ULTRASONIC_SENSOR__COMPARATOR:
        setComparator(COMPARATOR_EDEFAULT);
        return;
      case DlsPackage.ULTRASONIC_SENSOR__DISTANCE:
        setDistance(DISTANCE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DlsPackage.ULTRASONIC_SENSOR__COMPARATOR:
        return comparator != COMPARATOR_EDEFAULT;
      case DlsPackage.ULTRASONIC_SENSOR__DISTANCE:
        return DISTANCE_EDEFAULT == null ? distance != null : !DISTANCE_EDEFAULT.equals(distance);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (comparator: ");
    result.append(comparator);
    result.append(", distance: ");
    result.append(distance);
    result.append(')');
    return result.toString();
  }

} //UltrasonicSensorImpl
